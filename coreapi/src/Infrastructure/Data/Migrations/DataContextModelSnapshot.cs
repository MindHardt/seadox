// <auto-generated />
using System;
using CoreApi.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CoreApi.Infrastructure.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CoreApi.Features.Docs.Seadoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer")
                        .HasColumnName("owner_id");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_seadocs");

                    b.HasIndex("OwnerId")
                        .HasDatabaseName("ix_seadocs_owner_id");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_seadocs_parent_id");

                    b.ToTable("seadocs", (string)null);
                });

            modelBuilder.Entity("CoreApi.Features.Uploads.Upload", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content_type");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint")
                        .HasColumnName("file_size");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("hash")
                        .UseCollation("C");

                    b.Property<short>("Scope")
                        .HasColumnType("smallint")
                        .HasColumnName("scope");

                    b.Property<DateTimeOffset>("UploadTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("upload_time");

                    b.Property<int>("UploaderId")
                        .HasColumnType("integer")
                        .HasColumnName("uploader_id");

                    b.HasKey("Id")
                        .HasName("pk_uploads");

                    b.HasIndex("Hash")
                        .HasDatabaseName("ix_uploads_hash");

                    b.HasIndex("UploaderId")
                        .HasDatabaseName("ix_uploads_uploader_id");

                    b.ToTable("uploads", (string)null);
                });

            modelBuilder.Entity("CoreApi.Features.Users.SeadoxUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("text")
                        .HasColumnName("avatar_url");

                    b.Property<long>("StorageUsed")
                        .HasColumnType("bigint")
                        .HasColumnName("storage_used");

                    b.Property<long>("ZitadelId")
                        .HasColumnType("bigint")
                        .HasColumnName("zitadel_id");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("ZitadelId")
                        .IsUnique()
                        .HasDatabaseName("ix_users_zitadel_id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("CoreApi.Features.Docs.Seadoc", b =>
                {
                    b.HasOne("CoreApi.Features.Users.SeadoxUser", "Owner")
                        .WithMany("Seadocs")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_seadocs_users_owner_id");

                    b.HasOne("CoreApi.Features.Docs.Seadoc", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_seadocs_seadocs_parent_id");

                    b.OwnsOne("CoreApi.Features.Access.DocumentShareMode", "Share", b1 =>
                        {
                            b1.Property<int>("SeadocId")
                                .HasColumnType("integer");

                            b1.Property<short>("Access")
                                .HasColumnType("smallint");

                            b1.Property<short>("ShareType")
                                .HasColumnType("smallint");

                            b1.HasKey("SeadocId");

                            b1.ToTable("seadocs");

                            b1.ToJson("share");

                            b1.WithOwner()
                                .HasForeignKey("SeadocId")
                                .HasConstraintName("fk_seadocs_seadocs_id");
                        });

                    b.Navigation("Owner");

                    b.Navigation("Parent");

                    b.Navigation("Share")
                        .IsRequired();
                });

            modelBuilder.Entity("CoreApi.Features.Uploads.Upload", b =>
                {
                    b.HasOne("CoreApi.Features.Users.SeadoxUser", "Uploader")
                        .WithMany()
                        .HasForeignKey("UploaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_uploads_users_uploader_id");

                    b.Navigation("Uploader");
                });

            modelBuilder.Entity("CoreApi.Features.Docs.Seadoc", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("CoreApi.Features.Users.SeadoxUser", b =>
                {
                    b.Navigation("Seadocs");
                });
#pragma warning restore 612, 618
        }
    }
}
