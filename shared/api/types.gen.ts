// This file is auto-generated by @hey-api/openapi-ts

/**
 * AccessLevel
 */
export type AccessLevel = 'None' | 'Read' | 'Write';

/**
 * CreateDocRequest
 */
export type CreateDocRequest = {
    parentId?: string | null;
    name: string;
};

/**
 * DocumentShareMode
 */
export type DocumentShareMode = {
    access: AccessLevel;
    type: ShareType;
};

/**
 * GetIndexResponse
 */
export type GetIndexResponse = {
    root: Array<SeadocInfo>;
    bookmarks: Array<SeadocInfo>;
};

/**
 * IFormFile
 */
export type IFormFile = Blob | File;

/**
 * MigrateUploadRequest
 */
export type MigrateUploadRequest = {
    url: string;
    scope: UploadScope;
};

/**
 * PaginatedResponseOfSeadocInfo
 */
export type PaginatedResponseOfSeadocInfo = {
    total: number;
    data: Array<SeadocInfo>;
};

/**
 * PaginatedResponseOfUploadModel
 */
export type PaginatedResponseOfUploadModel = {
    total: number;
    data: Array<UploadModel>;
};

/**
 * SeadocInfo
 */
export type SeadocInfo = {
    id: string;
    name: string;
    description: string;
    coverUrl: string | null;
    ownerId: string;
    parentId: string | null;
    createdAt: string;
    updatedAt: string;
};

/**
 * SeadocModel
 */
export type SeadocModel = {
    accessLevel: AccessLevel;
    share: DocumentShareMode;
    /**
     * Lineage of this doc, from itself to its root ancestor
     */
    lineage: Array<SeadocInfo>;
    children: Array<SeadocInfo>;
    id: string;
    name: string;
    description: string;
    coverUrl: string | null;
    ownerId: string;
    parentId: string | null;
    createdAt: string;
    updatedAt: string;
};

/**
 * SeadoxUserModel
 */
export type SeadoxUserModel = {
    id: string;
    zitadelId: number;
    avatarUrl: string | null;
    color: string;
};

/**
 * ShareType
 */
export type ShareType = 'CurrentOnly' | 'Cascades';

/**
 * UpdateDocRequestBody
 */
export type UpdateDocRequestBody = {
    name: string;
    description: string;
    coverUrl?: string | null;
    share: DocumentShareMode;
};

/**
 * UpdateMeRequest
 */
export type UpdateMeRequest = {
    color?: string | null;
    avatarUrl?: string | null;
};

/**
 * UploadModel
 */
export type UploadModel = {
    id: string;
    uploaderId: string;
    hash: string;
    contentType: string;
    fileName: string;
    fileSize: number;
    uploadTime: string;
    scope: UploadScope;
};

/**
 * UploadScope
 */
export type UploadScope = 'Attachment' | 'Avatar' | 'Admin';

export type DeleteSeadocsByIdBookmarkData = {
    body?: never;
    path: {
        Id: string;
    };
    query?: never;
    url: '/seadocs/{Id}/bookmark';
};

export type DeleteSeadocsByIdBookmarkErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type DeleteSeadocsByIdBookmarkResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostSeadocsByIdBookmarkData = {
    body?: never;
    path: {
        Id: string;
    };
    query?: never;
    url: '/seadocs/{Id}/bookmark';
};

export type PostSeadocsByIdBookmarkErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type PostSeadocsByIdBookmarkResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetDevLoginData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/dev/login';
};

export type GetDevLoginResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetSeadocsData = {
    body?: never;
    path?: never;
    query?: {
        Query?: string;
        /**
         * Offset (pagination)
         */
        Offset?: number;
        /**
         * Count (pagination)
         */
        Limit?: number;
    };
    url: '/seadocs';
};

export type GetSeadocsResponses = {
    /**
     * OK
     */
    200: PaginatedResponseOfSeadocInfo;
};

export type GetSeadocsResponse = GetSeadocsResponses[keyof GetSeadocsResponses];

export type PostSeadocsData = {
    body?: CreateDocRequest;
    path?: never;
    query?: never;
    url: '/seadocs';
};

export type PostSeadocsErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type PostSeadocsResponses = {
    /**
     * OK
     */
    200: SeadocModel;
};

export type PostSeadocsResponse = PostSeadocsResponses[keyof PostSeadocsResponses];

export type DeleteSeadocsByIdData = {
    body?: never;
    path: {
        Id: string;
    };
    query?: never;
    url: '/seadocs/{Id}';
};

export type DeleteSeadocsByIdErrors = {
    /**
     * Not Found
     */
    404: unknown;
    /**
     * Unprocessable Entity
     */
    422: unknown;
};

export type DeleteSeadocsByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetSeadocsByIdData = {
    body?: never;
    path: {
        Id: string;
    };
    query?: never;
    url: '/seadocs/{Id}';
};

export type GetSeadocsByIdErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type GetSeadocsByIdResponses = {
    /**
     * OK
     */
    200: SeadocModel;
};

export type GetSeadocsByIdResponse = GetSeadocsByIdResponses[keyof GetSeadocsByIdResponses];

export type PatchSeadocsByIdData = {
    body: UpdateDocRequestBody;
    path: {
        Id: string;
    };
    query?: never;
    url: '/seadocs/{Id}';
};

export type PatchSeadocsByIdErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type PatchSeadocsByIdResponses = {
    /**
     * OK
     */
    200: SeadocModel;
};

export type PatchSeadocsByIdResponse = PatchSeadocsByIdResponses[keyof PatchSeadocsByIdResponses];

export type GetSeadocsByIdContentData = {
    body?: never;
    path: {
        Id: string;
    };
    query?: never;
    url: '/seadocs/{Id}/content';
};

export type GetSeadocsByIdContentErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type GetSeadocsByIdContentResponses = {
    /**
     * No Content
     */
    204: void;
};

export type GetSeadocsByIdContentResponse = GetSeadocsByIdContentResponses[keyof GetSeadocsByIdContentResponses];

export type PutSeadocsByIdContentData = {
    body: {
        Content: IFormFile;
    };
    path: {
        Id: string;
    };
    query?: never;
    url: '/seadocs/{Id}/content';
};

export type PutSeadocsByIdContentErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type PutSeadocsByIdContentResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetSeadocsIndexData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/seadocs/index';
};

export type GetSeadocsIndexResponses = {
    /**
     * OK
     */
    200: GetIndexResponse;
};

export type GetSeadocsIndexResponse = GetSeadocsIndexResponses[keyof GetSeadocsIndexResponses];

export type DeleteUploadsByIdData = {
    body?: never;
    path: {
        Id: string;
    };
    query?: never;
    url: '/uploads/{Id}';
};

export type DeleteUploadsByIdErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type DeleteUploadsByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetUploadsByIdData = {
    body?: never;
    path: {
        Id: string;
    };
    query?: never;
    url: '/uploads/{Id}';
};

export type GetUploadsByIdErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type GetUploadsData = {
    body?: never;
    path?: never;
    query?: {
        Scope?: 'Attachment' | 'Avatar' | 'Admin';
        Query?: string;
        /**
         * Offset (pagination)
         */
        Offset?: number;
        /**
         * Count (pagination)
         */
        Limit?: number;
    };
    url: '/uploads';
};

export type GetUploadsResponses = {
    /**
     * OK
     */
    200: PaginatedResponseOfUploadModel;
};

export type GetUploadsResponse = GetUploadsResponses[keyof GetUploadsResponses];

export type PostUploadsData = {
    body: {
        File: IFormFile;
    } & {
        Scope: UploadScope;
    };
    path?: never;
    query?: never;
    url: '/uploads';
};

export type PostUploadsErrors = {
    /**
     * Unprocessable Entity
     */
    422: unknown;
};

export type PostUploadsResponses = {
    /**
     * OK
     */
    200: UploadModel;
};

export type PostUploadsResponse = PostUploadsResponses[keyof PostUploadsResponses];

export type PostUploadsMigrateData = {
    body?: MigrateUploadRequest;
    path?: never;
    query?: never;
    url: '/uploads/migrate';
};

export type PostUploadsMigrateErrors = {
    /**
     * Unprocessable Entity
     */
    422: unknown;
};

export type PostUploadsMigrateResponses = {
    /**
     * OK
     */
    200: UploadModel;
};

export type PostUploadsMigrateResponse = PostUploadsMigrateResponses[keyof PostUploadsMigrateResponses];

export type GetUsersMeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users/me';
};

export type GetUsersMeResponses = {
    /**
     * OK
     */
    200: SeadoxUserModel;
};

export type GetUsersMeResponse = GetUsersMeResponses[keyof GetUsersMeResponses];

export type PatchUsersMeData = {
    body?: UpdateMeRequest;
    path?: never;
    query?: never;
    url: '/users/me';
};

export type PatchUsersMeResponses = {
    /**
     * OK
     */
    200: SeadoxUserModel;
};

export type PatchUsersMeResponse = PatchUsersMeResponses[keyof PatchUsersMeResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080/' | (string & {});
};
