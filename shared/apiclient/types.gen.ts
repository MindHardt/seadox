// This file is auto-generated by @hey-api/openapi-ts

/**
 * CreateDocRequest
 */
export type CreateDocRequest = {
    parentId?: string | null;
    name: string;
};

/**
 * PaginatedResponseOfSeadocInfo
 */
export type PaginatedResponseOfSeadocInfo = {
    total: number;
    data: Array<SeadocInfo>;
};

/**
 * PaginatedResponseOfUploadModel
 */
export type PaginatedResponseOfUploadModel = {
    total: number;
    data: Array<UploadModel>;
};

/**
 * SeadocInfo
 */
export type SeadocInfo = {
    id: string;
    name: string;
    description: string;
    ownerId: string;
    parentId: string | null;
    createdAt: string;
    updatedAt: string;
};

/**
 * SeadocModel
 */
export type SeadocModel = {
    /**
     * Lineage of this doc, from itself to its root ancestor
     */
    lineage: Array<SeadocInfo>;
    id: string;
    name: string;
    description: string;
    ownerId: string;
    parentId: string | null;
    createdAt: string;
    updatedAt: string;
};

export type SeadoxUserModel = {
    id: unknown;
    zitadelId: number;
    avatarUrl: string | null;
};

/**
 * UploadModel
 */
export type UploadModel = {
    id: string;
    uploaderId: string;
    hash: string;
    contentType: string;
    fileName: string;
    fileSize: number;
    uploadTime: string;
    scope: UploadScope;
};

/**
 * UploadScope
 */
export type UploadScope = 'Attachment' | 'Avatar' | 'Admin';

export type GetDevLoginData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/dev/login';
};

export type GetDevLoginResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetSeadocsData = {
    body?: never;
    path?: never;
    query: {
        Query?: string;
        /**
         * Offset (pagination)
         */
        Offset: number;
        /**
         * Count (pagination)
         */
        Limit: number;
    };
    url: '/seadocs';
};

export type GetSeadocsResponses = {
    /**
     * OK
     */
    200: PaginatedResponseOfSeadocInfo;
};

export type GetSeadocsResponse = GetSeadocsResponses[keyof GetSeadocsResponses];

export type PostSeadocsData = {
    body?: CreateDocRequest;
    path?: never;
    query?: never;
    url: '/seadocs';
};

export type PostSeadocsErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type PostSeadocsResponses = {
    /**
     * OK
     */
    200: SeadocModel;
};

export type PostSeadocsResponse = PostSeadocsResponses[keyof PostSeadocsResponses];

export type GetSeadocsByIdData = {
    body?: never;
    path: {
        Id: string;
    };
    query?: never;
    url: '/seadocs/{Id}';
};

export type GetSeadocsByIdErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type GetSeadocsByIdResponses = {
    /**
     * OK
     */
    200: SeadocModel;
};

export type GetSeadocsByIdResponse = GetSeadocsByIdResponses[keyof GetSeadocsByIdResponses];

export type DeleteUploadsByIdData = {
    body?: never;
    path: {
        Id: string;
    };
    query?: never;
    url: '/uploads/{Id}';
};

export type DeleteUploadsByIdErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type DeleteUploadsByIdResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetUploadsByIdData = {
    body?: never;
    path: {
        Id: string;
    };
    query?: never;
    url: '/uploads/{Id}';
};

export type GetUploadsByIdErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type GetUploadsData = {
    body?: never;
    path?: never;
    query: {
        Scope?: 'Attachment' | 'Avatar' | 'Admin';
        Query?: string;
        /**
         * Offset (pagination)
         */
        Offset: number;
        /**
         * Count (pagination)
         */
        Limit: number;
    };
    url: '/uploads';
};

export type GetUploadsResponses = {
    /**
     * OK
     */
    200: PaginatedResponseOfUploadModel;
};

export type GetUploadsResponse = GetUploadsResponses[keyof GetUploadsResponses];

export type PostUploadsData = {
    body: {
        /**
         * IFormFile
         */
        File: Blob | File;
    } & {
        Scope: UploadScope;
    };
    path?: never;
    query?: never;
    url: '/uploads';
};

export type PostUploadsErrors = {
    /**
     * Unprocessable Entity
     */
    422: unknown;
};

export type PostUploadsResponses = {
    /**
     * OK
     */
    200: UploadModel;
};

export type PostUploadsResponse = PostUploadsResponses[keyof PostUploadsResponses];

export type GetUsersMeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users/me';
};

export type GetUsersMeResponses = {
    /**
     * OK
     */
    200: {
        user?: SeadoxUserModel;
    };
};

export type GetUsersMeResponse = GetUsersMeResponses[keyof GetUsersMeResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080/' | (string & {});
};